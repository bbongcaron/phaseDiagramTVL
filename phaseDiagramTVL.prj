<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration file="D:\Documents\MATLAB\phaseDiagramTVL\phaseDiagramTVL.prj" location="D:\Documents\MATLAB\phaseDiagramTVL" name="phaseDiagramTVL" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>phaseDiagramTVL</param.appname>
    <param.icon />
    <param.icons />
    <param.version>1.0</param.version>
    <param.authnamewatermark>Brenton Bongcaron</param.authnamewatermark>
    <param.email>brenton.bongcaron@rutgers.edu</param.email>
    <param.company>Rutgers University</param.company>
    <param.summary>Generate a T vs. liquid/vapor mole fraction of component A (in a binary mixture of A+B) phase diagram</param.summary>
    <param.description>This program uses Antoine's Equation coefficients from zyBooks 14:155:201 Table 9.10.1 and a user inputted constant pressure P to calculate the saturation temperature at P. These points serve to define the upper and lower bound of the range of temperature values this VL phase diagram exists in. The vapor and liquid phase boundaries are defined by 100 data points each and are calculated by the following algorithm:

For each temperature in a linearly spaced array of 100 elements:

    calculate the saturation pressure @ the current temperature for both components of the binary mixture
    using the bubble point pressure equation derived from the summation of Rauolt's Law for each component, calculate the liquid mole fractions
    using a rearrangment of Rauolt's Law, calculate the vapor mole frations

A figure is then generated by plotting liquid and vapor mole fractions each against the linearly spaced array of temperatures.

Error Handling:
If a component that does not have an entry in the Excel spreadsheet of Antoine's Equation coefficients is entered, an error message will be printed and the program will exit.
Each component has its own range of temperatures for which Antoine's Equation will be accurate. Implementation of this range will be done in the future.

Equations Used:
Raoult's Law : yP = xp*

    y = vapor mole fraction of component i
    P = total pressure of system
    x = liquid mole fraction of component i
    p* = saturation pressure @T for component i

Antoine's Equation : log10(p*) = A - (B / (T + C))

    A, B &amp; C are coefficents according to the component
    p* = saturation pressure @T for component i
    T = temperature
    Note : Antoine's Equation can also be a function of pressure used to find saturation temperature (t*)

Bubble Point Pressure Equation : P = Î£(xp*)

    P = total pressure of system
    x = liquid mole fraction of component i
    p* = saturation pressure @T for component i</param.description>
    <param.screenshot />
    <param.guid />
    <param.installpath.string>\Rutgers University\phaseDiagramTVL\</param.installpath.string>
    <param.installpath.combo>option.installpath.programfiles</param.installpath.combo>
    <param.logo />
    <param.install.notes />
    <param.target.install.notes />
    <param.intermediate>${PROJECT_ROOT}\phaseDiagramTVL\for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}\phaseDiagramTVL\for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}\phaseDiagramTVL\for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}\phaseDiagramTVL</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>MyAppInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>MyAppInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>false</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments</param.help.text>
    <unset>
      <param.icon />
      <param.icons />
      <param.version />
      <param.authnamewatermark />
      <param.email />
      <param.company />
      <param.screenshot />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.install.notes />
      <param.target.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.logdir />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.web.mcr.name />
      <param.package.mcr.name />
      <param.no.mcr.name />
      <param.create.log />
      <param.log.file />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\phaseDiagramTVL.m</file>
    </fileset.main>
    <fileset.resources>
      <file>${PROJECT_ROOT}\antoinesCoefficients.xlsx</file>
    </fileset.resources>
    <fileset.package />
    <fileset.depfun />
    <build-deliverables>
      <file location="${PROJECT_ROOT}\phaseDiagramTVL\for_testing" name="phaseDiagramTVL.exe" optional="false">D:\Documents\MATLAB\phaseDiagramTVL\phaseDiagramTVL\for_testing\phaseDiagramTVL.exe</file>
      <file location="${PROJECT_ROOT}\phaseDiagramTVL\for_testing" name="readme.txt" optional="true">D:\Documents\MATLAB\phaseDiagramTVL\phaseDiagramTVL\for_testing\readme.txt</file>
      <file location="${PROJECT_ROOT}\phaseDiagramTVL\for_testing" name="splash.png" optional="false">D:\Documents\MATLAB\phaseDiagramTVL\phaseDiagramTVL\for_testing\splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>C:\Program Files\MATLAB\R2019b</root>
      <toolboxes />
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>10.0</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>